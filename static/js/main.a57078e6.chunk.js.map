{"version":3,"sources":["draw/Box.tsx","App.tsx","index.tsx"],"names":["Box","props","mesh","useRef","useState","hovered","setHover","active","setActive","Vector3","sizes","setSizes","time","setTime","useFrame","current","rotation","x","y","position","Math","sin","PI","ref","scale","onClick","event","random","onPointerOver","onPointerOut","args","color","colors","getRandomColor","round","length","App","props1","useSpring","from","left","top","width","height","background","to","next","a","condition","max","console","log","props2","props3","props4","className","div","style","intensity","angle","penumbra","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQA+CeA,EA3CH,SAACC,GAEZ,IAAMC,EAAOC,mBAFoB,EAKLC,oBAAS,GALJ,mBAK1BC,EAL0B,KAKjBC,EALiB,OAMLF,oBAAS,GANJ,mBAM1BG,EAN0B,KAMlBC,EANkB,OAOPJ,mBAAS,IAAIK,UAAQ,EAAE,EAAE,IAPlB,mBAO1BC,EAP0B,KAOnBC,EAPmB,OAQTP,mBAAS,GARA,mBAQ1BQ,EAR0B,KAQpBC,EARoB,KAyBjC,OAdAC,aAAS,WACJZ,EAAKa,UACRb,EAAKa,QAAQC,SAASC,EAAIf,EAAKa,QAAQC,SAASC,GAAK,KAClDf,EAAKa,UACRb,EAAKa,QAAQC,SAASE,EAAIhB,EAAKa,QAAQC,SAASE,GAAK,KAElDhB,EAAKa,UACRb,EAAKa,QAAQI,SAASF,GAA0D,KAArDG,KAAKC,IAAc,EAAVD,KAAKE,GAASV,EAAO,IAAOQ,KAAKE,GAAK,IACvEpB,EAAKa,UACRb,EAAKa,QAAQI,SAASD,GAA0D,KAArDE,KAAKC,IAAc,EAAVD,KAAKE,GAASV,EAAO,IAAOQ,KAAKE,GAAK,IAE3ET,EAAQD,EAAO,MAIf,iDACKX,GADL,IAECsB,IAAKrB,EACLsB,MAAOjB,EAASG,EAAQ,CAAC,EAAG,EAAG,GAC/Be,QAAS,SAACC,GACJnB,GACJI,EAAS,IAAIF,UAAwB,IAAhBW,KAAKO,SAAgC,IAAhBP,KAAKO,SAAgC,IAAhBP,KAAKO,WACrEnB,GAAWD,IAEZqB,cAAe,SAACF,GAAD,OAAWpB,GAAS,IACnCuB,aAAc,SAACH,GAAD,OAAWpB,GAAS,IAVnC,UAWC,mCAAmBwB,KAAM,CAAC,EAAG,EAAG,KAChC,sCAAsBC,MAAO1B,EAAU,cAAgB,mB,QCpCpD2B,EAAS,CACd,aACA,YACA,YACA,uBACA,cACA,aACA,gBACA,eACA,kBAGKC,EAAiB,WACtB,OAAOD,EAAOZ,KAAKc,MAAMd,KAAKO,SAAWK,EAAOG,QAAUH,EAAOG,SAkFnDC,EA/EH,WACX,IAAMC,EAASC,YAAU,CACxBC,KAAM,CAAEC,KAAM,KAAMC,IAAK,KAAMC,MAAO,KAAMC,OAAQ,KAAMC,WAAY,cACtEC,GAAG,WAAD,4BAAE,WAAOC,GAAP,yBAAAC,EAAA,sDACGC,GAAY,EADf,WAEIA,EAFJ,wBAGIR,EAAuB,GAAhBpB,KAAKO,SACZe,EAAQtB,KAAK6B,IAAoB,GAAhB7B,KAAKO,SAAe,IACrCc,EAAsB,GAAhBrB,KAAKO,SACXgB,EAASvB,KAAK6B,IAAoB,GAAhB7B,KAAKO,SAAe,IACtCI,EAAQE,IACdiB,QAAQC,IAAI,CAACX,OAAMC,MAAKC,QAAOC,WAR7B,UASIG,EAAK,CAAEN,KAAMA,EAAO,IAAKC,IAAKA,EAAM,IAAKC,MAAOA,EAAQ,IAAKC,OAAQA,EAAS,IAAKC,WAAYb,IATnG,mEAAF,mDAAC,KAaEqB,EAASd,YAAU,CACxBC,KAAM,CAAEC,KAAM,KAAMC,IAAK,KAAMC,MAAO,KAAMC,OAAQ,KAAMC,WAAY,cACtEC,GAAG,WAAD,4BAAE,WAAOC,GAAP,yBAAAC,EAAA,sDACGC,GAAY,EADf,WAEIA,EAFJ,wBAGIR,EAAuB,GAAhBpB,KAAKO,SACZe,EAAQtB,KAAK6B,IAAoB,GAAhB7B,KAAKO,SAAe,IACrCc,EAAsB,GAAhBrB,KAAKO,SACXgB,EAASvB,KAAK6B,IAAoB,GAAhB7B,KAAKO,SAAe,IACtCI,EAAQE,IAPZ,SAQIa,EAAK,CAAEN,KAAMA,EAAO,IAAKC,IAAKA,EAAM,IAAKC,MAAOA,EAAQ,IAAKC,OAAQA,EAAS,IAAKC,WAAYb,IARnG,kEAAF,mDAAC,KAYEsB,EAASf,YAAU,CACxBC,KAAM,CAAEC,KAAM,KAAMC,IAAK,KAAMC,MAAO,KAAMC,OAAQ,KAAMC,WAAY,cACtEC,GAAG,WAAD,4BAAE,WAAOC,GAAP,yBAAAC,EAAA,sDACGC,GAAY,EADf,WAEIA,EAFJ,wBAGIR,EAAuB,GAAhBpB,KAAKO,SACZe,EAAQtB,KAAK6B,IAAoB,GAAhB7B,KAAKO,SAAe,IACrCc,EAAsB,GAAhBrB,KAAKO,SACXgB,EAASvB,KAAK6B,IAAoB,GAAhB7B,KAAKO,SAAe,IACtCI,EAAQE,IAPZ,SAQIa,EAAK,CAAEN,KAAMA,EAAO,IAAKC,IAAKA,EAAM,IAAKC,MAAOA,EAAQ,IAAKC,OAAQA,EAAS,IAAKC,WAAYb,IARnG,kEAAF,mDAAC,KAYEuB,EAAShB,YAAU,CACxBC,KAAM,CAAEC,KAAM,KAAMC,IAAK,KAAMC,MAAO,KAAMC,OAAQ,KAAMC,WAAY,cACtEC,GAAG,WAAD,4BAAE,WAAOC,GAAP,yBAAAC,EAAA,sDACGC,GAAY,EADf,WAEIA,EAFJ,wBAGIR,EAAuB,GAAhBpB,KAAKO,SACZe,EAAQtB,KAAK6B,IAAoB,GAAhB7B,KAAKO,SAAe,IACrCc,EAAsB,GAAhBrB,KAAKO,SACXgB,EAASvB,KAAK6B,IAAoB,GAAhB7B,KAAKO,SAAe,IACtCI,EAAQE,IAPZ,SAQIa,EAAK,CAAEN,KAAMA,EAAO,IAAKC,IAAKA,EAAM,IAAKC,MAAOA,EAAQ,IAAKC,OAAQA,EAAS,IAAKC,WAAYb,IARnG,kEAAF,mDAAC,KAYJ,OACC,sBAAKwB,UAAU,MAAf,UACC,wBAAQA,UAAU,aAAlB,SACC,2CAED,sBAAKA,UAAU,YAAf,UACC,cAAC,IAASC,IAAV,CAAcD,UAAU,aAAaE,MAAOpB,IAC5C,cAAC,IAASmB,IAAV,CAAcD,UAAU,aAAaE,MAAOL,IAC5C,cAAC,IAASI,IAAV,CAAcD,UAAU,aAAaE,MAAOJ,IAC5C,cAAC,IAASG,IAAV,CAAcD,UAAU,aAAaE,MAAOH,IAC5C,eAAC,IAAD,CAAQC,UAAU,SAAlB,UACC,8BAAcG,UAAW,KACzB,2BAAWvC,SAAU,CAAC,GAAI,GAAI,IAAKwC,MAAO,IAAMC,SAAU,IAC1D,4BAAYzC,SAAU,EAAE,IAAK,IAAK,MAClC,cAAC,EAAD,CAAKA,SAAU,CAAC,EAAG,EAAG,eCzF3B0C,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.a57078e6.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { MeshProps, useFrame } from \"react-three-fiber\";\nimport { Mesh, Vector3 } from \"three\";\n\nconst Box = (props: MeshProps) => {\n\t// This reference will give us direct access to the mesh\n\tconst mesh = useRef<Mesh>();\n\n\t// Set up state for the hovered and active state\n\tconst [hovered, setHover] = useState(false);\n\tconst [active, setActive] = useState(false);\n\tconst [sizes, setSizes] = useState(new Vector3(1,1,1));\n\tconst [time, setTime] = useState(0);\n\n\t// Rotate mesh every frame, this is outside of React without overhead\n\tuseFrame(() => {\n\t\tif (mesh.current)\n\t\t\tmesh.current.rotation.x = mesh.current.rotation.x += 0.03;\n\t\tif (mesh.current)\n\t\t\tmesh.current.rotation.y = mesh.current.rotation.y += 0.03;\n\n\t\tif (mesh.current)\n\t\t\tmesh.current.position.x += Math.sin(Math.PI * 2 * time / 600 + (Math.PI / 2)) * 0.035;\n\t\tif (mesh.current)\n\t\t\tmesh.current.position.y += Math.sin(Math.PI * 2 * time / 300 + (Math.PI / 2)) * 0.035;\n\n\t\tsetTime(time + 1);\n\t});\n\n\treturn (\n\t\t<mesh\n\t\t\t{...props}\n\t\t\tref={mesh}\n\t\t\tscale={active ? sizes : [1, 1, 1]}\n\t\t\tonClick={(event) => {\n\t\t\t\tif (!active)\n\t\t\t\t\tsetSizes(new Vector3(Math.random() * 2.5, Math.random() * 2.5, Math.random() * 2.5));\n\t\t\t\tsetActive(!active);\n\t\t\t}}\n\t\t\tonPointerOver={(event) => setHover(true)}\n\t\t\tonPointerOut={(event) => setHover(false)}>\n\t\t\t<boxBufferGeometry args={[1, 1, 1]} />\n\t\t\t<meshStandardMaterial color={hovered ? \"lightyellow\" : \"lightblue\"} />\n\t\t</mesh>\n\t);\n};\n\nexport default Box;","import React from \"react\";\nimport \"./App.css\";\nimport { Canvas } from \"react-three-fiber\";\nimport Box from \"./draw/Box\";\nimport {animated, useSpring} from \"react-spring/web\";\n\nconst colors = [\n\t\"lightgreen\",\n\t\"lightblue\",\n\t\"lightpink\",\n\t\"lightgoldenrodyellow\",\n\t\"lightsalmon\",\n\t\"lightcoral\",\n\t\"lightseagreen\",\n\t\"lightskyblue\",\n\t\"lightslategrey\",\n];\n\nconst getRandomColor = () => {\n\treturn colors[Math.round(Math.random() * colors.length) % colors.length];\n};\n\nconst App = () => {\n\tconst props1 = useSpring({\n\t\tfrom: { left: \"0%\", top: \"0%\", width: \"0%\", height: \"0%\", background: \"lightgreen\" },\n\t\tto: async (next: any) => {\n\t\t\tconst condition = true;\n\t\t\twhile (condition) {\n\t\t\t\tconst left = Math.random() * 50;\n\t\t\t\tconst width = Math.max(Math.random() * 70, 25);\n\t\t\t\tconst top = Math.random() * 50;\n\t\t\t\tconst height = Math.max(Math.random() * 70, 25);\n\t\t\t\tconst color = getRandomColor();\n\t\t\t\tconsole.log({left, top, width, height});\n\t\t\t\tawait next({ left: left + \"%\", top: top + \"%\", width: width + \"%\", height: height + \"%\", background: color });\n\t\t\t}\n\t\t},\n\t});\n\tconst props2 = useSpring({\n\t\tfrom: { left: \"0%\", top: \"0%\", width: \"0%\", height: \"0%\", background: \"lightgreen\" },\n\t\tto: async (next: any) => {\n\t\t\tconst condition = true;\n\t\t\twhile (condition) {\n\t\t\t\tconst left = Math.random() * 50;\n\t\t\t\tconst width = Math.max(Math.random() * 70, 25);\n\t\t\t\tconst top = Math.random() * 50;\n\t\t\t\tconst height = Math.max(Math.random() * 70, 25);\n\t\t\t\tconst color = getRandomColor();\n\t\t\t\tawait next({ left: left + \"%\", top: top + \"%\", width: width + \"%\", height: height + \"%\", background: color });\n\t\t\t}\n\t\t},\n\t});\n\tconst props3 = useSpring({\n\t\tfrom: { left: \"0%\", top: \"0%\", width: \"0%\", height: \"0%\", background: \"lightgreen\" },\n\t\tto: async (next: any) => {\n\t\t\tconst condition = true;\n\t\t\twhile (condition) {\n\t\t\t\tconst left = Math.random() * 50;\n\t\t\t\tconst width = Math.max(Math.random() * 70, 25);\n\t\t\t\tconst top = Math.random() * 50;\n\t\t\t\tconst height = Math.max(Math.random() * 70, 25);\n\t\t\t\tconst color = getRandomColor();\n\t\t\t\tawait next({ left: left + \"%\", top: top + \"%\", width: width + \"%\", height: height + \"%\", background: color });\n\t\t\t}\n\t\t},\n\t});\n\tconst props4 = useSpring({\n\t\tfrom: { left: \"0%\", top: \"0%\", width: \"0%\", height: \"0%\", background: \"lightgreen\" },\n\t\tto: async (next: any) => {\n\t\t\tconst condition = true;\n\t\t\twhile (condition) {\n\t\t\t\tconst left = Math.random() * 50;\n\t\t\t\tconst width = Math.max(Math.random() * 70, 25);\n\t\t\t\tconst top = Math.random() * 50;\n\t\t\t\tconst height = Math.max(Math.random() * 70, 25);\n\t\t\t\tconst color = getRandomColor();\n\t\t\t\tawait next({ left: left + \"%\", top: top + \"%\", width: width + \"%\", height: height + \"%\", background: color });\n\t\t\t}\n\t\t},\n\t});\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<p>ledondon</p>\n\t\t\t</header>\n\t\t\t<div className=\"container\">\n\t\t\t\t<animated.div className=\"script-box\" style={props1} />\n\t\t\t\t<animated.div className=\"script-box\" style={props2} />\n\t\t\t\t<animated.div className=\"script-box\" style={props3} />\n\t\t\t\t<animated.div className=\"script-box\" style={props4} />\n\t\t\t\t<Canvas className=\"Canvas\">\n\t\t\t\t\t<ambientLight intensity={0.5} />\n\t\t\t\t\t<spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\n\t\t\t\t\t<pointLight position={[-10, -10, -10]} />\n\t\t\t\t\t<Box position={[0, 0, 0]} />\n\t\t\t\t</Canvas>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}