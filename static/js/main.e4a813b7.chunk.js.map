{"version":3,"sources":["draw/Box.tsx","App.tsx","index.tsx"],"names":["Box","props","mesh","useRef","useState","hovered","setHover","active","setActive","time","setTime","useFrame","current","rotation","x","y","position","Math","sin","PI","ref","scale","onClick","event","onPointerOver","onPointerOut","args","color","App","className","intensity","angle","penumbra","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAqCeA,EAjCH,SAACC,GAEZ,IAAMC,EAAOC,mBAFoB,EAKLC,oBAAS,GALJ,mBAK1BC,EAL0B,KAKjBC,EALiB,OAMLF,oBAAS,GANJ,mBAM1BG,EAN0B,KAMlBC,EANkB,OAOTJ,mBAAS,GAPA,mBAO1BK,EAP0B,KAOpBC,EAPoB,KAmBjC,OATAC,aAAS,WACJT,EAAKU,UAASV,EAAKU,QAAQC,SAASC,EAAIZ,EAAKU,QAAQC,SAASC,GAAK,KACnEZ,EAAKU,UAASV,EAAKU,QAAQC,SAASE,EAAIb,EAAKU,QAAQC,SAASE,GAAK,KAEnEb,EAAKU,UACRV,EAAKU,QAAQI,SAASF,GAA0D,IAArDG,KAAKC,IAAc,EAAVD,KAAKE,GAASV,EAAO,IAAOQ,KAAKE,GAAK,IAC3ET,EAAQD,EAAO,MAIf,iDACKR,GADL,IAECmB,IAAKlB,EACLmB,MAAOd,EAAS,CAAC,IAAK,IAAK,KAAO,CAAC,EAAG,EAAG,GACzCe,QAAS,SAACC,GAAD,OAAWf,GAAWD,IAC/BiB,cAAe,SAACD,GAAD,OAAWjB,GAAS,IACnCmB,aAAc,SAACF,GAAD,OAAWjB,GAAS,IANnC,UAOC,mCAAmBoB,KAAM,CAAC,EAAG,EAAG,KAChC,sCAAsBC,MAAOtB,EAAU,UAAY,gBCXvCuB,EAhBH,WACX,OACC,qBAAKC,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACC,yCACA,eAAC,IAAD,WACC,8BAAcC,UAAW,KACzB,2BAAWd,SAAU,CAAC,GAAI,GAAI,IAAKe,MAAO,IAAMC,SAAU,IAC1D,4BAAYhB,SAAU,EAAE,IAAK,IAAK,MAClC,cAAC,EAAD,CAAKA,SAAU,CAAC,EAAG,EAAG,cCT3BiB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.e4a813b7.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { MeshProps, useFrame } from \"react-three-fiber\";\nimport { Mesh } from \"three\";\n\nconst Box = (props: MeshProps) => {\n\t// This reference will give us direct access to the mesh\n\tconst mesh = useRef<Mesh>();\n\n\t// Set up state for the hovered and active state\n\tconst [hovered, setHover] = useState(false);\n\tconst [active, setActive] = useState(false);\n\tconst [time, setTime] = useState(0);\n\n\t// Rotate mesh every frame, this is outside of React without overhead\n\tuseFrame(() => {\n\t\tif (mesh.current) mesh.current.rotation.x = mesh.current.rotation.x += 0.03;\n\t\tif (mesh.current) mesh.current.rotation.y = mesh.current.rotation.y += 0.03;\n\n\t\tif (mesh.current) \n\t\t\tmesh.current.position.x += Math.sin(Math.PI * 2 * time / 600 + (Math.PI / 2)) * 0.05;\n\t\tsetTime(time + 1);\n\t});\n\n\treturn (\n\t\t<mesh\n\t\t\t{...props}\n\t\t\tref={mesh}\n\t\t\tscale={active ? [2.5, 2.5, 2.5] : [1, 1, 1]}\n\t\t\tonClick={(event) => setActive(!active)}\n\t\t\tonPointerOver={(event) => setHover(true)}\n\t\t\tonPointerOut={(event) => setHover(false)}>\n\t\t\t<boxBufferGeometry args={[1, 1, 1]} />\n\t\t\t<meshStandardMaterial color={hovered ? \"hotpink\" : \"orange\"} />\n\t\t</mesh>\n\t);\n};\n\nexport default Box;","import React from \"react\";\nimport \"./App.css\";\nimport { Canvas } from \"react-three-fiber\";\nimport Box from \"./draw/Box\";\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<p>ledondon</p>\n\t\t\t\t<Canvas>\n\t\t\t\t\t<ambientLight intensity={0.5} />\n\t\t\t\t\t<spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\n\t\t\t\t\t<pointLight position={[-10, -10, -10]} />\n\t\t\t\t\t<Box position={[0, 0, 0]} />\n\t\t\t\t</Canvas>\n\t\t\t</header>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}